//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMW.EF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using SMW.EF.Context;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SMWEntities : DbContext,IDbContext
    {
        public SMWEntities()
            : base("name=SMWEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<ExtensionType> ExtensionTypes { get; set; }
        public virtual DbSet<MediaType> MediaTypes { get; set; }
        public virtual DbSet<Media> Media { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<PropertyType> PropertyTypes { get; set; }
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<FacilityType> FacilityTypes { get; set; }
        public virtual DbSet<RentalPeriod> RentalPeriods { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<Video> Videos { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<WebQuery> WebQueries { get; set; }
    
        public virtual ObjectResult<Media_GetDescendants_Result> Media_GetDescendants(Nullable<long> mediaId)
        {
            var mediaIdParameter = mediaId.HasValue ?
                new ObjectParameter("MediaId", mediaId) :
                new ObjectParameter("MediaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Media_GetDescendants_Result>("Media_GetDescendants", mediaIdParameter);
        }
    
        public virtual ObjectResult<string> Media_GetPath(Nullable<long> mediaId)
        {
            var mediaIdParameter = mediaId.HasValue ?
                new ObjectParameter("MediaId", mediaId) :
                new ObjectParameter("MediaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Media_GetPath", mediaIdParameter);
        }
    
        public virtual ObjectResult<string> Media_GetPathCsvMediaId(Nullable<long> mediaId)
        {
            var mediaIdParameter = mediaId.HasValue ?
                new ObjectParameter("MediaId", mediaId) :
                new ObjectParameter("MediaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Media_GetPathCsvMediaId", mediaIdParameter);
        }
    
        public virtual int Media_SetPath(Nullable<long> mediaId)
        {
            var mediaIdParameter = mediaId.HasValue ?
                new ObjectParameter("MediaId", mediaId) :
                new ObjectParameter("MediaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Media_SetPath", mediaIdParameter);
        }
    
        public virtual int Mark_Project_And_RelatedData_AsDeleted(Nullable<long> inPutProjectId, string userId)
        {
            var inPutProjectIdParameter = inPutProjectId.HasValue ?
                new ObjectParameter("inPutProjectId", inPutProjectId) :
                new ObjectParameter("inPutProjectId", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mark_Project_And_RelatedData_AsDeleted", inPutProjectIdParameter, userIdParameter);
        }
    
        public virtual int Mark_Property_And_Related_DataAs_Deleted(Nullable<long> inPutPropertyId, string userId)
        {
            var inPutPropertyIdParameter = inPutPropertyId.HasValue ?
                new ObjectParameter("inPutPropertyId", inPutPropertyId) :
                new ObjectParameter("inPutPropertyId", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mark_Property_And_Related_DataAs_Deleted", inPutPropertyIdParameter, userIdParameter);
        }
    
        public virtual int Mark_Service_And_RelatedData_AsDeleted(Nullable<long> inPutServiceId, string userId)
        {
            var inPutServiceIdParameter = inPutServiceId.HasValue ?
                new ObjectParameter("inPutServiceId", inPutServiceId) :
                new ObjectParameter("inPutServiceId", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mark_Service_And_RelatedData_AsDeleted", inPutServiceIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Video_Publish(Nullable<int> videoId, string publishedBy)
        {
            var videoIdParameter = videoId.HasValue ?
                new ObjectParameter("VideoId", videoId) :
                new ObjectParameter("VideoId", typeof(int));
    
            var publishedByParameter = publishedBy != null ?
                new ObjectParameter("PublishedBy", publishedBy) :
                new ObjectParameter("PublishedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Video_Publish", videoIdParameter, publishedByParameter);
        }
    
        public virtual int Video_UnPublish(Nullable<int> draftId)
        {
            var draftIdParameter = draftId.HasValue ?
                new ObjectParameter("DraftId", draftId) :
                new ObjectParameter("DraftId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Video_UnPublish", draftIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> Property_Publish(Nullable<long> propertyId, string publishedBy)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(long));
    
            var publishedByParameter = publishedBy != null ?
                new ObjectParameter("PublishedBy", publishedBy) :
                new ObjectParameter("PublishedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Property_Publish", propertyIdParameter, publishedByParameter);
        }
    
        public virtual int Property_UnPublish(Nullable<long> draftId)
        {
            var draftIdParameter = draftId.HasValue ?
                new ObjectParameter("DraftId", draftId) :
                new ObjectParameter("DraftId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Property_UnPublish", draftIdParameter);
        }
    }
}
